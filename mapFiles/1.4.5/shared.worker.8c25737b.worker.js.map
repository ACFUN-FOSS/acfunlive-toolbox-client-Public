{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/electron_browser/util_function/storeWorker/shared.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","hostPort","clients","store","changedDanmaku","lastDanmakuTime","count","getDanmuInfo","danmaku","type","data","danmuInfo","getTime","joinTime","sendTime","error","getChangedDanmaku","danmakuSession","filterFlow","filter","onconnect","e","port","ports","postMessage","onmessage","method","client","JSON","parse","forEach","states","length","result","state","stringify","push"],"mappings":"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","file":"js/shared.worker.8c25737b.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"25bc\");\n","/* eslint-disable */\r\nlet hostPort = null;\r\nlet clients = [];\r\nconst HOST = 0,\r\n\tCLIENT = 1;\r\nlet store = null;\r\nlet changedDanmaku = [];\r\nlet lastDanmakuTime = 0;\r\nlet count = 0;\r\n\r\nconst getDanmuInfo = (danmaku) => {\r\n\tconst type = danmaku.type;\r\n\tswitch (type) {\r\n\t\tcase 1000:\r\n\t\t\treturn danmaku.data.danmuInfo;\r\n\t\tcase 1001:\r\n\t\t\treturn danmaku.data;\r\n\t\tcase 1002:\r\n\t\t\treturn danmaku.data;\r\n\t\tcase 1003:\r\n\t\t\treturn danmaku.data;\r\n\t\tcase 1004:\r\n\t\t\treturn danmaku.data;\r\n\t\tcase 1005:\r\n\t\t\treturn danmaku.data.danmuInfo;\r\n\t\tcase 1006:\r\n\t\t\treturn danmaku.data;\r\n\t\tcase 1007:\r\n\t\t\treturn danmaku.data;\r\n\t\tdefault:\r\n\t\t\treturn 0;\r\n\t}\r\n};\r\nconst getTime = (danmaku) => {\r\n\ttry {\r\n\t\tconst type = danmaku.type;\r\n\t\tswitch (type) {\r\n\t\t\tcase 1007:\r\n\t\t\t\treturn danmaku.data.joinTime;\r\n\t\t\tdefault:\r\n\t\t\t\treturn getDanmuInfo(danmaku).sendTime;\r\n\t\t}\r\n\t} catch (error) {\r\n\t\treturn 0\r\n\t}\r\n};\r\n\r\nconst getChangedDanmaku = () => {\r\n\tif (!store || !store.danmakuSession || !store.danmakuSession.filterFlow) return;\r\n\tconst filterFlow = store.danmakuSession.filterFlow;\r\n\tif (!lastDanmakuTime) {\r\n\t\tchangedDanmaku = filterFlow;\r\n\t} else {\r\n\t\tchangedDanmaku = filterFlow.filter(danmaku => getTime(danmaku) > lastDanmakuTime);\r\n\t}\r\n\tif (filterFlow[0]) {\r\n\t\tlastDanmakuTime = getTime(filterFlow[0]);\r\n\t}\r\n}\r\n\r\nonconnect = function (e) {\r\n\tconst port = e.ports[0];\r\n\tcount++;\r\n\tport.postMessage([`connected! ${count}`, \"\"]);\r\n\tport.onmessage = e => {\r\n\t\tconst [method, data] = e.data;\r\n\t\tswitch (method) {\r\n\t\t\tcase \"close\":\r\n\t\t\t\tif (hostPort === port) {\r\n\t\t\t\t\thostPort = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tclients = clients.filter(client => client.port !== port);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"registerHost\":\r\n\t\t\t\thostPort = port;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"stateUpdate\":\r\n\t\t\t\tif (data) store = JSON.parse(data);\r\n\t\t\t\tgetChangedDanmaku();\r\n\t\t\t\tclients.forEach(client => {\r\n\t\t\t\t\tif (!client.states || !client.states.length) return;\r\n\t\t\t\t\tconst result = {};\r\n\t\t\t\t\tclient.states.forEach(state => {\r\n\t\t\t\t\t\tif (state === \"changedDanmaku\") {\r\n\t\t\t\t\t\t\tresult[state] = changedDanmaku;\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult[state] = store[state];\r\n\t\t\t\t\t})\r\n\t\t\t\t\tclient.port.postMessage([\"client-reply\", JSON.stringify(result)]);\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"registerClient\":\r\n\t\t\t\tclients.push({\r\n\t\t\t\t\tport,\r\n\t\t\t\t\tstates: JSON.parse(data)\r\n\t\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n};\r\n"],"sourceRoot":""}