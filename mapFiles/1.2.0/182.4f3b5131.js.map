{"version":3,"sources":["webpack://acfunlive-toolbox/./src/electron_browser/components/superChat/index.vue","webpack://acfunlive-toolbox/./src/electron_browser/components/superChat/index.vue?3e06","webpack://acfunlive-toolbox/./src/electron_browser/components/superChat/index.vue?731a","webpack://acfunlive-toolbox/./src/electron_browser/views/danmakuWeb/index.vue","webpack://acfunlive-toolbox/./src/electron_browser/views/danmakuWeb/index.vue?4b6c","webpack://acfunlive-toolbox/./src/electron_browser/views/danmakuWeb/index.vue?7419"],"names":["class","temp","superChatArray","scBlock","selectedID","superChatID","select","displayType","key","uid","sc-block","currentTime","remove","name","mode","superChatBlock","next","defineComponent","components","listBlock","listPanel","timeCounter","this","count","update","clearTimeout","computed","danmakuProfile","common","superChat","methods","Date","now","setTimeout","nextOne","find","block","showed","time","panelEndTime","listEndTime","filter","blockI","render","style","enable","superChatEnable","settings","web","danmakuList","danmakuSession","filterFlow","pos","dotsCount","dot","checkers","checker","label","value","flow","superChatList","statusTimer","that","settingTimer","reconnect","status","isOnline","method","refresh","wait","registered","registerWS","logined","login","hasSession","requestSession","hasSetting","updateSettings","isStreaming","requestStreaming","hasRank","danmakuing","startDanmaku","$store","state","isLogined","registerEvents","dispatch","then","unRegisterEvents","Object","values","item","forEach","window","wsl","close","updateSession","updateRank","updateManager","checkServerState","Promise","resolve","account","password","streamStatus","step","statusLooper","userSession","userID","res","Error","profile","assign","userProfile","roomProfile","liveID","fetch","cache","json","finally","session","Boolean","rank","managerList","list","length","push","liverUID","type","data","danmuInfo","sendTime","userInfo","nickname","avatar","medal","uperID","clubName","level","managerType","content","i"],"mappings":"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","file":"js/182.4f3b5131.js","sourcesContent":["<template>\r\n\t<div class=\"super-chat-list\">\r\n\t\t<div class=\"super-chat-list-row\">\r\n\t\t\t<list-block :selectedID=\"temp.superChatID\" @click=\"select(scBlock,5000)\" :displayType=\"displayType\" v-for=\"scBlock in temp.superChatArray\" :key=\"scBlock.uid\" :sc-block=\"scBlock\" :currentTime=\"currentTime\" @end=\"remove(scBlock)\" />\r\n\t\t</div>\r\n\t\t<transition name=\"fade\" mode=\"out-in\">\r\n\t\t\t<list-panel class=\"super-chat-panel\" :displayType=\"displayType\" :key=\"temp.superChatID\" v-if=\"temp.superChatBlock\" :sc-block=\"temp.superChatBlock\" :currentTime=\"currentTime\" @next=\"next()\" />\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport { mapState } from \"vuex\";\r\nimport listBlock from \"./listBlock.vue\";\r\nimport listPanel from \"./listPanel.vue\";\r\nimport { event } from \"@front/util_function/eventBus\";\r\nexport default defineComponent({\r\n\tname: \"superChatList\",\r\n\tcomponents: { listBlock, listPanel },\r\n\tdata() {\r\n\t\tconst timeCounter: any = null;\r\n\t\treturn {\r\n\t\t\tcurrentTime: 0,\r\n\t\t\ttimeCounter\r\n\t\t};\r\n\t},\r\n\tmounted() {\r\n\t\tthis.count();\r\n\t\tevent.on(\"super-chat-updated\", this.update);\r\n\t},\r\n\tbeforeUnmount() {\r\n\t\tclearTimeout(this.timeCounter);\r\n\t\tevent.off(\"super-chat-updated\", this.update);\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapState([\"temp\", \"danmakuProfile\"]),\r\n\t\tsuperChatArray(): Array<any> {\r\n\t\t\treturn this.temp.superChatArray;\r\n\t\t},\r\n\t\tdisplayType(): number {\r\n\t\t\treturn this.danmakuProfile.common?.superChat?.displayType || 0;\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tupdate() {\r\n\t\t\tif (this.temp.superChatID) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.next();\r\n\t\t},\r\n\t\tcount() {\r\n\t\t\tclearTimeout(this.timeCounter);\r\n\t\t\tthis.currentTime = Date.now();\r\n\t\t\tthis.timeCounter = setTimeout(() => {\r\n\t\t\t\tthis.count();\r\n\t\t\t}, 1000);\r\n\t\t},\r\n\t\tnext() {\r\n\t\t\tconst nextOne = this.temp.superChatArray.find(\r\n\t\t\t\t(block: any) => !block.showed\r\n\t\t\t);\r\n\t\t\tif (!nextOne) {\r\n\t\t\t\tthis.temp.superChatID = 0;\r\n\t\t\t\tthis.temp.superChatBlock = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.select(nextOne);\r\n\t\t\t}\r\n\t\t},\r\n\t\tselect(block: any, time = 20000) {\r\n\t\t\tblock.showed = true;\r\n\t\t\tblock.panelEndTime = Date.now() + time;\r\n\t\t\tif (block.listEndTime < block.panelEndTime) {\r\n\t\t\t\tblock.listEndTime = block.panelEndTime;\r\n\t\t\t}\r\n\t\t\tthis.temp.superChatID = block.uid;\r\n\t\t\tthis.temp.superChatBlock = block;\r\n\t\t},\r\n\t\tremove(block: any) {\r\n\t\t\tthis.temp.superChatArray = this.temp.superChatArray.filter(\r\n\t\t\t\t(blockI: any) => blockI !== block\r\n\t\t\t);\r\n\t\t\tif (block.uid === this.temp.superChatID) {\r\n\t\t\t\tthis.next();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n</script>\r\n\r\n<style scoped lang='scss'>\r\n@import \"@front/styles/variables.scss\";\r\n.super-chat-list {\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\theight: 35px;\r\n\tbox-sizing: border-box;\r\n\tborder: $--border-base;\r\n\t.super-chat-list-row {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tflex-wrap: wrap;\r\n\t\toverflow: hidden;\r\n\t\tpadding-left: 8px;\r\n\t}\r\n}\r\n</style>\r\n","\r\nimport { defineComponent } from \"vue\";\r\nimport { mapState } from \"vuex\";\r\nimport listBlock from \"./listBlock.vue\";\r\nimport listPanel from \"./listPanel.vue\";\r\nimport { event } from \"@front/util_function/eventBus\";\r\nexport default defineComponent({\r\n\tname: \"superChatList\",\r\n\tcomponents: { listBlock, listPanel },\r\n\tdata() {\r\n\t\tconst timeCounter: any = null;\r\n\t\treturn {\r\n\t\t\tcurrentTime: 0,\r\n\t\t\ttimeCounter\r\n\t\t};\r\n\t},\r\n\tmounted() {\r\n\t\tthis.count();\r\n\t\tevent.on(\"super-chat-updated\", this.update);\r\n\t},\r\n\tbeforeUnmount() {\r\n\t\tclearTimeout(this.timeCounter);\r\n\t\tevent.off(\"super-chat-updated\", this.update);\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapState([\"temp\", \"danmakuProfile\"]),\r\n\t\tsuperChatArray(): Array<any> {\r\n\t\t\treturn this.temp.superChatArray;\r\n\t\t},\r\n\t\tdisplayType(): number {\r\n\t\t\treturn this.danmakuProfile.common?.superChat?.displayType || 0;\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tupdate() {\r\n\t\t\tif (this.temp.superChatID) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.next();\r\n\t\t},\r\n\t\tcount() {\r\n\t\t\tclearTimeout(this.timeCounter);\r\n\t\t\tthis.currentTime = Date.now();\r\n\t\t\tthis.timeCounter = setTimeout(() => {\r\n\t\t\t\tthis.count();\r\n\t\t\t}, 1000);\r\n\t\t},\r\n\t\tnext() {\r\n\t\t\tconst nextOne = this.temp.superChatArray.find(\r\n\t\t\t\t(block: any) => !block.showed\r\n\t\t\t);\r\n\t\t\tif (!nextOne) {\r\n\t\t\t\tthis.temp.superChatID = 0;\r\n\t\t\t\tthis.temp.superChatBlock = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.select(nextOne);\r\n\t\t\t}\r\n\t\t},\r\n\t\tselect(block: any, time = 20000) {\r\n\t\t\tblock.showed = true;\r\n\t\t\tblock.panelEndTime = Date.now() + time;\r\n\t\t\tif (block.listEndTime < block.panelEndTime) {\r\n\t\t\t\tblock.listEndTime = block.panelEndTime;\r\n\t\t\t}\r\n\t\t\tthis.temp.superChatID = block.uid;\r\n\t\t\tthis.temp.superChatBlock = block;\r\n\t\t},\r\n\t\tremove(block: any) {\r\n\t\t\tthis.temp.superChatArray = this.temp.superChatArray.filter(\r\n\t\t\t\t(blockI: any) => blockI !== block\r\n\t\t\t);\r\n\t\t\tif (block.uid === this.temp.superChatID) {\r\n\t\t\t\tthis.next();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n","import { render } from \"./index.vue?vue&type=template&id=aef6ee9c&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=aef6ee9c&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-aef6ee9c\"\n\nexport default script","<template>\r\n\t<div style=\"width:100%;height:100%;position:relative\">\r\n\t\t<super-chat-list class=\"super-chat\" v-if=\"enable&&superChatEnable\" />\r\n\t\t<flow v-if=\"enable\" :class=\"{superChatEnable}\" :settings=\"danmakuProfile.web\" :danmakuList=\"danmakuSession.filterFlow\" />\r\n\t\t<transition name=\"fade\" mode=\"out-in\">\r\n\t\t\t<div class=\"tips\" v-if=\"!enable\">\r\n\t\t\t\t<div class=\"positioner\" :class=\"pos\" v-for=\"pos in ['lt','rt','lb','rb']\" :key=\"pos\" />\r\n\t\t\t\t<div class=\"title\">弹幕准备中。<span v-for=\"dot in dotsCount\" :key=\"dot\">。</span></div>\r\n\t\t\t\t<div v-for=\"checker of checkers\" :key=\"checker.label\" class=\"checkers\">\r\n\t\t\t\t\t<div class=\"label\">{{checker.label}}</div>\r\n\t\t\t\t\t<div class=\"status\" :class=\"checker.value?'el-icon-circle-check success':'el-icon-circle-close failed'\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport { wsevent, user, server } from \"@front/api\";\r\nimport { event } from \"@front/util_function/eventBus\";\r\nimport { commonSettings } from \"@front/datas/danmaku\";\r\nimport { tempInfo } from \"@front/datas/temp\";\r\nimport flow from \"@front/components/danmakuFlow/index.vue\";\r\nimport { mapState, mapGetters } from \"vuex\";\r\nimport superChatList from \"@front/components/superChat/index.vue\";\r\nexport default defineComponent({\r\n\tname: \"webDanmaku\",\r\n\tcomponents: {\r\n\t\tflow,\r\n\t\tsuperChatList\r\n\t},\r\n\tdata() {\r\n\t\tconst danmakuList: any = [];\r\n\t\tconst statusTimer: any = null;\r\n\t\t// @ts-ignore\r\n\t\tconst that: any = this;\r\n\t\treturn {\r\n\t\t\tdanmakuList,\r\n\t\t\tstatusTimer,\r\n\t\t\tsettingTimer: false,\r\n\t\t\tdotsCount: 0,\r\n\t\t\treconnect: false,\r\n\t\t\tstatus: {\r\n\t\t\t\tisOnline: {\r\n\t\t\t\t\tlabel: \"连接在线\",\r\n\t\t\t\t\tmethod: that.refresh,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 2000\r\n\t\t\t\t},\r\n\t\t\t\tregistered: {\r\n\t\t\t\t\tlabel: \"通信注册\",\r\n\t\t\t\t\tmethod: that.registerWS,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 500\r\n\t\t\t\t},\r\n\t\t\t\tlogined: {\r\n\t\t\t\t\tlabel: \"登陆\",\r\n\t\t\t\t\tmethod: that.login,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 500\r\n\t\t\t\t},\r\n\t\t\t\thasSession: {\r\n\t\t\t\t\tlabel: \"主播信息\",\r\n\t\t\t\t\tmethod: that.requestSession,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 500\r\n\t\t\t\t},\r\n\t\t\t\thasSetting: {\r\n\t\t\t\t\tlabel: \"弹幕设置\",\r\n\t\t\t\t\tmethod: that.updateSettings,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 1500\r\n\t\t\t\t},\r\n\t\t\t\tisStreaming: {\r\n\t\t\t\t\tlabel: \"直播状态\",\r\n\t\t\t\t\tmethod: that.requestStreaming,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 500\r\n\t\t\t\t},\r\n\t\t\t\thasRank: {\r\n\t\t\t\t\tlabel: \"牌子信息\",\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 500\r\n\t\t\t\t},\r\n\t\t\t\tdanmakuing: {\r\n\t\t\t\t\tlabel: \"弹幕启动\",\r\n\t\t\t\t\tmethod: that.startDanmaku,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 30000\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\tcreated() {\r\n\t\tthis.$store.state.isLogined = true;\r\n\t\tthis.registerEvents();\r\n\t},\r\n\tmounted() {\r\n\t\tthis.$store.dispatch(\"startServe\").then(() => {\r\n\t\t\tthis.registerWS();\r\n\t\t});\r\n\t},\r\n\tbeforeUnmount() {\r\n\t\tthis.unRegisterEvents();\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters([\"superChatEnable\"]),\r\n\t\t...mapState([\r\n\t\t\t\"userSession\",\r\n\t\t\t\"danmakuProfile\",\r\n\t\t\t\"rank\",\r\n\t\t\t\"streamStatus\",\r\n\t\t\t\"danmakuSession\"\r\n\t\t]),\r\n\t\tcheckers(): Array<any> {\r\n\t\t\treturn Object.values(this.status);\r\n\t\t},\r\n\t\tenable(): boolean {\r\n\t\t\tfor (const item of Object.values(this.status)) {\r\n\t\t\t\tif (!item.value) return false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\trefresh() {\r\n\t\t\tclearTimeout(this.statusTimer);\r\n\t\t\tthis.checkers.forEach((checker: any) => {\r\n\t\t\t\tchecker.value = false;\r\n\t\t\t});\r\n\t\t\tif (server.isOnline()) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\twindow.wsl.close();\r\n\t\t\t}\r\n\t\t},\r\n\t\tregisterEvents() {\r\n\t\t\twsevent.on(\"update-style\", this.updateSettings);\r\n\t\t\twsevent.on(\"update-settings\", this.updateSettings);\r\n\t\t\twsevent.on(\"update-session\", this.updateSession); // rank 由服务器定期发送\r\n\t\t\twsevent.on(\"update-rank\", this.updateRank);\r\n\t\t\twsevent.on(\"update-manager\", this.updateManager);\r\n\t\t\twsevent.on(\"registered\", () => {\r\n\t\t\t\tthis.status.registered.value = true;\r\n\t\t\t});\r\n\t\t\tevent.on(\"streamStatusChanged\", this.checkServerState);\r\n\t\t},\r\n\t\tunRegisterEvents() {\r\n\t\t\twsevent.off(\"update-style\", this.updateSettings);\r\n\t\t\twsevent.off(\"update-settings\", this.updateSettings);\r\n\t\t\twsevent.off(\"update-session\", this.updateSession); // rank 由服务器定期发送\r\n\t\t\twsevent.off(\"update-rank\", this.updateRank);\r\n\t\t\twsevent.off(\"update-manager\", this.updateManager);\r\n\t\t\tevent.off(\"streamStatusChanged\", this.checkServerState);\r\n\t\t},\r\n\t\tlogin() {\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\tuser.login({\r\n\t\t\t\t\taccount: \"\",\r\n\t\t\t\t\tpassword: \"\"\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\tthis.status.logined.value = true;\r\n\t\t\t\t\tthis.registerWS();\r\n\t\t\t\t\tresolve(true);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\tcheckServerState() {\r\n\t\t\tswitch (this.streamStatus.step) {\r\n\t\t\t\tcase \"online\":\r\n\t\t\t\t\tthis.status.isOnline.value = true;\r\n\t\t\t\t\tthis.registerWS();\r\n\t\t\t\t\tthis.statusLooper();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"danmakuing\":\r\n\t\t\t\t\tthis.status.danmakuing.value = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"streamable\":\r\n\t\t\t\t\t// window.location.reload();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tstatusLooper() {\r\n\t\t\tclearTimeout(this.statusTimer);\r\n\t\t\tthis.dotsCount = (this.dotsCount + 1) % 4;\r\n\t\t\tlet wait = 500;\r\n\t\t\tfor (const checker of this.checkers) {\r\n\t\t\t\tif (!checker.value) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tif (checker.method) checker.method();\r\n\t\t\t\t\twait = checker.wait;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.statusTimer = setTimeout(() => {\r\n\t\t\t\tthis.statusLooper();\r\n\t\t\t}, wait);\r\n\t\t},\r\n\t\tregisterWS() {\r\n\t\t\twsevent.register(\"client\");\r\n\t\t},\r\n\t\trequestSession() {\r\n\t\t\tif (!this.userSession.userID) {\r\n\t\t\t\twsevent.wsEmit(\"get-session\", {}, \"server\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.status.hasSetting.value = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\trequestSettings() {\r\n\t\t\twsevent.wsEmit(\"get-settings\", {}, \"server\");\r\n\t\t},\r\n\t\trequestStreaming() {\r\n\t\t\tif (!this.status.isStreaming.value) {\r\n\t\t\t\tconst state = this.$store.state;\r\n\t\t\t\tuser.streamInfo(state.userSession).then(res => {\r\n\t\t\t\t\tif (!res) {\r\n\t\t\t\t\t\tthrow new Error(\"no streamInfo\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.profile) {\r\n\t\t\t\t\t\tObject.assign(state.userProfile, res.profile);\r\n\t\t\t\t\t\tdelete res.profile;\r\n\t\t\t\t\t\tObject.assign(state.roomProfile, res);\r\n\t\t\t\t\t\tif (res.liveID) {\r\n\t\t\t\t\t\t\tthis.status.isStreaming.value = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateSettings() {\r\n\t\t\tif (this.settingTimer) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.settingTimer = true;\r\n\t\t\tfetch(\"/configFiles/config.json\", {\r\n\t\t\t\tcache: \"no-cache\"\r\n\t\t\t})\r\n\t\t\t\t.then((res: any) => res.json())\r\n\t\t\t\t.then((json: any) => {\r\n\t\t\t\t\tthis.status.hasSetting.value = true;\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.web = json.web;\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.common =\r\n\t\t\t\t\t\tjson.common || commonSettings();\r\n\t\t\t\t\tthis.$store.state.temp = tempInfo();\r\n\t\t\t\t})\r\n\t\t\t\t.finally(() => {\r\n\t\t\t\t\tthis.settingTimer = false;\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tupdateSession(session: any) {\r\n\t\t\tif (\r\n\t\t\t\tthis.status.hasSession.value &&\r\n\t\t\t\tthis.userSession.userID !== session.userID\r\n\t\t\t) {\r\n\t\t\t\tthis.refresh();\r\n\t\t\t}\r\n\t\t\tif ((this.status.hasSession.value = Boolean(session))) {\r\n\t\t\t\tthis.$store.state.userSession = session;\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateRank(rank: any) {\r\n\t\t\tif ((this.status.hasRank.value = Boolean(rank))) {\r\n\t\t\t\tthis.$store.state.rank = rank;\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateManager(res: any) {\r\n\t\t\tthis.$store.state.managerList = res.list;\r\n\t\t},\r\n\t\tstartDanmaku() {\r\n\t\t\tthis.$store.dispatch(\"streaming\");\r\n\t\t\tif (!this.danmakuSession.filterFlow.length) {\r\n\t\t\t\tthis.danmakuSession.filterFlow.push({\r\n\t\t\t\t\tliverUID: 23682490,\r\n\t\t\t\t\ttype: 1000,\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tdanmuInfo: {\r\n\t\t\t\t\t\t\tsendTime: 1618750176864,\r\n\t\t\t\t\t\t\tuserInfo: {\r\n\t\t\t\t\t\t\t\tuserID: 1,\r\n\t\t\t\t\t\t\t\tnickname: \"ACFUN前后端开源⑨课\",\r\n\t\t\t\t\t\t\t\tavatar:\r\n\t\t\t\t\t\t\t\t\t\"https://tx-free-imgs.acfun.cn/FllI0yyjNgQ61QdJJdbIh9cRQIYY?imageMogr2/auto-orient/format/webp/quality/75!/ignore-error/1\",\r\n\t\t\t\t\t\t\t\tmedal: {\r\n\t\t\t\t\t\t\t\t\tuperID: 23682490,\r\n\t\t\t\t\t\t\t\t\tuserID: 1,\r\n\t\t\t\t\t\t\t\t\tclubName: \"ACER\",\r\n\t\t\t\t\t\t\t\t\tlevel: 999\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tmanagerType: 0\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tcontent: \"弹幕流启动成功！直播开始啦开始啦！\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\treWait() {\r\n\t\t\t[\"hasSession\", \"isStreaming\", \"hasRank\", \"danmakuing\"].forEach(\r\n\t\t\t\t(i: any) => {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tthis.status[i].value = false;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n});\r\n</script>\r\n<style lang='scss'>\r\n@import \"@front/styles/variables.scss\";\r\nhtml,\r\nbody,\r\n#app {\r\n\tbackground-color: transparent;\r\n\tmin-width: 0px;\r\n\tmin-height: 0px;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpadding: 0px;\r\n}\r\n#app {\r\n\tmargin: 0px;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\ttransition: none;\r\n}\r\n.danmaku-flow {\r\n\tpadding-bottom: 16px !important;\r\n}\r\n.superChatEnable {\r\n\theight: calc(100% - 40px);\r\n}\r\n.super-chat {\r\n\tborder: none !important;\r\n\tmargin-bottom: 5px;\r\n}\r\n.tips {\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tcolor: white;\r\n\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\tfont-weight: 700;\r\n\tfont-size: 24px;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\t.title {\r\n\t\tfont-size: 32px;\r\n\t\tmargin-bottom: 15px;\r\n\t\tmargin-left: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\t.checkers {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 15px;\r\n\t\t.failed {\r\n\t\t\tcolor: $--color-danger;\r\n\t\t}\r\n\t\t.success {\r\n\t\t\tcolor: $--color-success;\r\n\t\t}\r\n\t\t.label {\r\n\t\t\twidth: 150px;\r\n\t\t}\r\n\t}\r\n\t.positioner {\r\n\t\tposition: absolute;\r\n\t\tborder-style: solid;\r\n\t\tborder-color: white;\r\n\t\theight: 5%;\r\n\t\twidth: 5%;\r\n\r\n\t\t&.lt {\r\n\t\t\ttop: 0px;\r\n\t\t\tleft: 0px;\r\n\t\t\tborder-width: 5px 0px 0px 5px;\r\n\t\t}\r\n\t\t&.rt {\r\n\t\t\ttop: 0px;\r\n\t\t\tright: 0px;\r\n\t\t\tborder-width: 5px 5px 0px 0px;\r\n\t\t}\r\n\t\t&.lb {\r\n\t\t\tbottom: 0px;\r\n\t\t\tleft: 0px;\r\n\t\t\tborder-width: 0px 0px 5px 5px;\r\n\t\t}\r\n\t\t&.rb {\r\n\t\t\tbottom: 0px;\r\n\t\t\tright: 0px;\r\n\t\t\tborder-width: 0px 5px 5px 0px;\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n","\r\nimport { defineComponent } from \"vue\";\r\nimport { wsevent, user, server } from \"@front/api\";\r\nimport { event } from \"@front/util_function/eventBus\";\r\nimport { commonSettings } from \"@front/datas/danmaku\";\r\nimport { tempInfo } from \"@front/datas/temp\";\r\nimport flow from \"@front/components/danmakuFlow/index.vue\";\r\nimport { mapState, mapGetters } from \"vuex\";\r\nimport superChatList from \"@front/components/superChat/index.vue\";\r\nexport default defineComponent({\r\n\tname: \"webDanmaku\",\r\n\tcomponents: {\r\n\t\tflow,\r\n\t\tsuperChatList\r\n\t},\r\n\tdata() {\r\n\t\tconst danmakuList: any = [];\r\n\t\tconst statusTimer: any = null;\r\n\t\t// @ts-ignore\r\n\t\tconst that: any = this;\r\n\t\treturn {\r\n\t\t\tdanmakuList,\r\n\t\t\tstatusTimer,\r\n\t\t\tsettingTimer: false,\r\n\t\t\tdotsCount: 0,\r\n\t\t\treconnect: false,\r\n\t\t\tstatus: {\r\n\t\t\t\tisOnline: {\r\n\t\t\t\t\tlabel: \"连接在线\",\r\n\t\t\t\t\tmethod: that.refresh,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 2000\r\n\t\t\t\t},\r\n\t\t\t\tregistered: {\r\n\t\t\t\t\tlabel: \"通信注册\",\r\n\t\t\t\t\tmethod: that.registerWS,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 500\r\n\t\t\t\t},\r\n\t\t\t\tlogined: {\r\n\t\t\t\t\tlabel: \"登陆\",\r\n\t\t\t\t\tmethod: that.login,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 500\r\n\t\t\t\t},\r\n\t\t\t\thasSession: {\r\n\t\t\t\t\tlabel: \"主播信息\",\r\n\t\t\t\t\tmethod: that.requestSession,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 500\r\n\t\t\t\t},\r\n\t\t\t\thasSetting: {\r\n\t\t\t\t\tlabel: \"弹幕设置\",\r\n\t\t\t\t\tmethod: that.updateSettings,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 1500\r\n\t\t\t\t},\r\n\t\t\t\tisStreaming: {\r\n\t\t\t\t\tlabel: \"直播状态\",\r\n\t\t\t\t\tmethod: that.requestStreaming,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 500\r\n\t\t\t\t},\r\n\t\t\t\thasRank: {\r\n\t\t\t\t\tlabel: \"牌子信息\",\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 500\r\n\t\t\t\t},\r\n\t\t\t\tdanmakuing: {\r\n\t\t\t\t\tlabel: \"弹幕启动\",\r\n\t\t\t\t\tmethod: that.startDanmaku,\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\twait: 30000\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\tcreated() {\r\n\t\tthis.$store.state.isLogined = true;\r\n\t\tthis.registerEvents();\r\n\t},\r\n\tmounted() {\r\n\t\tthis.$store.dispatch(\"startServe\").then(() => {\r\n\t\t\tthis.registerWS();\r\n\t\t});\r\n\t},\r\n\tbeforeUnmount() {\r\n\t\tthis.unRegisterEvents();\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters([\"superChatEnable\"]),\r\n\t\t...mapState([\r\n\t\t\t\"userSession\",\r\n\t\t\t\"danmakuProfile\",\r\n\t\t\t\"rank\",\r\n\t\t\t\"streamStatus\",\r\n\t\t\t\"danmakuSession\"\r\n\t\t]),\r\n\t\tcheckers(): Array<any> {\r\n\t\t\treturn Object.values(this.status);\r\n\t\t},\r\n\t\tenable(): boolean {\r\n\t\t\tfor (const item of Object.values(this.status)) {\r\n\t\t\t\tif (!item.value) return false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\trefresh() {\r\n\t\t\tclearTimeout(this.statusTimer);\r\n\t\t\tthis.checkers.forEach((checker: any) => {\r\n\t\t\t\tchecker.value = false;\r\n\t\t\t});\r\n\t\t\tif (server.isOnline()) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\twindow.wsl.close();\r\n\t\t\t}\r\n\t\t},\r\n\t\tregisterEvents() {\r\n\t\t\twsevent.on(\"update-style\", this.updateSettings);\r\n\t\t\twsevent.on(\"update-settings\", this.updateSettings);\r\n\t\t\twsevent.on(\"update-session\", this.updateSession); // rank 由服务器定期发送\r\n\t\t\twsevent.on(\"update-rank\", this.updateRank);\r\n\t\t\twsevent.on(\"update-manager\", this.updateManager);\r\n\t\t\twsevent.on(\"registered\", () => {\r\n\t\t\t\tthis.status.registered.value = true;\r\n\t\t\t});\r\n\t\t\tevent.on(\"streamStatusChanged\", this.checkServerState);\r\n\t\t},\r\n\t\tunRegisterEvents() {\r\n\t\t\twsevent.off(\"update-style\", this.updateSettings);\r\n\t\t\twsevent.off(\"update-settings\", this.updateSettings);\r\n\t\t\twsevent.off(\"update-session\", this.updateSession); // rank 由服务器定期发送\r\n\t\t\twsevent.off(\"update-rank\", this.updateRank);\r\n\t\t\twsevent.off(\"update-manager\", this.updateManager);\r\n\t\t\tevent.off(\"streamStatusChanged\", this.checkServerState);\r\n\t\t},\r\n\t\tlogin() {\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\tuser.login({\r\n\t\t\t\t\taccount: \"\",\r\n\t\t\t\t\tpassword: \"\"\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\tthis.status.logined.value = true;\r\n\t\t\t\t\tthis.registerWS();\r\n\t\t\t\t\tresolve(true);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\tcheckServerState() {\r\n\t\t\tswitch (this.streamStatus.step) {\r\n\t\t\t\tcase \"online\":\r\n\t\t\t\t\tthis.status.isOnline.value = true;\r\n\t\t\t\t\tthis.registerWS();\r\n\t\t\t\t\tthis.statusLooper();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"danmakuing\":\r\n\t\t\t\t\tthis.status.danmakuing.value = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"streamable\":\r\n\t\t\t\t\t// window.location.reload();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tstatusLooper() {\r\n\t\t\tclearTimeout(this.statusTimer);\r\n\t\t\tthis.dotsCount = (this.dotsCount + 1) % 4;\r\n\t\t\tlet wait = 500;\r\n\t\t\tfor (const checker of this.checkers) {\r\n\t\t\t\tif (!checker.value) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tif (checker.method) checker.method();\r\n\t\t\t\t\twait = checker.wait;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.statusTimer = setTimeout(() => {\r\n\t\t\t\tthis.statusLooper();\r\n\t\t\t}, wait);\r\n\t\t},\r\n\t\tregisterWS() {\r\n\t\t\twsevent.register(\"client\");\r\n\t\t},\r\n\t\trequestSession() {\r\n\t\t\tif (!this.userSession.userID) {\r\n\t\t\t\twsevent.wsEmit(\"get-session\", {}, \"server\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.status.hasSetting.value = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\trequestSettings() {\r\n\t\t\twsevent.wsEmit(\"get-settings\", {}, \"server\");\r\n\t\t},\r\n\t\trequestStreaming() {\r\n\t\t\tif (!this.status.isStreaming.value) {\r\n\t\t\t\tconst state = this.$store.state;\r\n\t\t\t\tuser.streamInfo(state.userSession).then(res => {\r\n\t\t\t\t\tif (!res) {\r\n\t\t\t\t\t\tthrow new Error(\"no streamInfo\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.profile) {\r\n\t\t\t\t\t\tObject.assign(state.userProfile, res.profile);\r\n\t\t\t\t\t\tdelete res.profile;\r\n\t\t\t\t\t\tObject.assign(state.roomProfile, res);\r\n\t\t\t\t\t\tif (res.liveID) {\r\n\t\t\t\t\t\t\tthis.status.isStreaming.value = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateSettings() {\r\n\t\t\tif (this.settingTimer) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.settingTimer = true;\r\n\t\t\tfetch(\"/configFiles/config.json\", {\r\n\t\t\t\tcache: \"no-cache\"\r\n\t\t\t})\r\n\t\t\t\t.then((res: any) => res.json())\r\n\t\t\t\t.then((json: any) => {\r\n\t\t\t\t\tthis.status.hasSetting.value = true;\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.web = json.web;\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.common =\r\n\t\t\t\t\t\tjson.common || commonSettings();\r\n\t\t\t\t\tthis.$store.state.temp = tempInfo();\r\n\t\t\t\t})\r\n\t\t\t\t.finally(() => {\r\n\t\t\t\t\tthis.settingTimer = false;\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tupdateSession(session: any) {\r\n\t\t\tif (\r\n\t\t\t\tthis.status.hasSession.value &&\r\n\t\t\t\tthis.userSession.userID !== session.userID\r\n\t\t\t) {\r\n\t\t\t\tthis.refresh();\r\n\t\t\t}\r\n\t\t\tif ((this.status.hasSession.value = Boolean(session))) {\r\n\t\t\t\tthis.$store.state.userSession = session;\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateRank(rank: any) {\r\n\t\t\tif ((this.status.hasRank.value = Boolean(rank))) {\r\n\t\t\t\tthis.$store.state.rank = rank;\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateManager(res: any) {\r\n\t\t\tthis.$store.state.managerList = res.list;\r\n\t\t},\r\n\t\tstartDanmaku() {\r\n\t\t\tthis.$store.dispatch(\"streaming\");\r\n\t\t\tif (!this.danmakuSession.filterFlow.length) {\r\n\t\t\t\tthis.danmakuSession.filterFlow.push({\r\n\t\t\t\t\tliverUID: 23682490,\r\n\t\t\t\t\ttype: 1000,\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tdanmuInfo: {\r\n\t\t\t\t\t\t\tsendTime: 1618750176864,\r\n\t\t\t\t\t\t\tuserInfo: {\r\n\t\t\t\t\t\t\t\tuserID: 1,\r\n\t\t\t\t\t\t\t\tnickname: \"ACFUN前后端开源⑨课\",\r\n\t\t\t\t\t\t\t\tavatar:\r\n\t\t\t\t\t\t\t\t\t\"https://tx-free-imgs.acfun.cn/FllI0yyjNgQ61QdJJdbIh9cRQIYY?imageMogr2/auto-orient/format/webp/quality/75!/ignore-error/1\",\r\n\t\t\t\t\t\t\t\tmedal: {\r\n\t\t\t\t\t\t\t\t\tuperID: 23682490,\r\n\t\t\t\t\t\t\t\t\tuserID: 1,\r\n\t\t\t\t\t\t\t\t\tclubName: \"ACER\",\r\n\t\t\t\t\t\t\t\t\tlevel: 999\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tmanagerType: 0\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tcontent: \"弹幕流启动成功！直播开始啦开始啦！\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\treWait() {\r\n\t\t\t[\"hasSession\", \"isStreaming\", \"hasRank\", \"danmakuing\"].forEach(\r\n\t\t\t\t(i: any) => {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tthis.status[i].value = false;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n});\r\n","import { render } from \"./index.vue?vue&type=template&id=3a5360b0\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=3a5360b0&lang=scss\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}